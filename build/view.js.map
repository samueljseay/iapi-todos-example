{"version":3,"file":"view.js","mappings":";;;;;;;;;AAAA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA;;;;;;SCJA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;ACNyE;AAEzE,MAAMG,QAAQ,GAAGC,MAAM,CAACC,EAAE,CAACF,QAAQ;AAEnC,MAAMG,eAAe,GAAIC,EAAE,IAAK,IAAIC,OAAO,CAAEC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAE,CAAC;AAEjF,MAAMI,OAAO,GAAGA,CAACC,WAAW,EAAEC,UAAU,EAAEC,OAAO,KAAK;EACrD,OAAOX,QAAQ,CAAC;IACfY,IAAI,EAAE,sBAAsB;IAC5BC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE;MAAEL,WAAW;MAAEM,YAAY,EAAEL,UAAU;MAAEM,QAAQ,EAAEL;IAAQ;EAClE,CAAC,CAAC;AACH,CAAC;AAEDd,+DAAK,CAAE,YAAY,EAAE;EACpBoB,OAAO,EAAE;IACRT,OAAO,EAAE,UAAAA,CAAA,EAAa;MACrB,MAAMU,OAAO,GAAGnB,oEAAU,CAAC,CAAC;MAE5BmB,OAAO,CAACC,gBAAgB,GAAG,IAAI;MAE/B,IAAI;QACH,MAAMhB,eAAe,CAAC,IAAI,CAAC;QAC3B,MAAMK,OAAO,CAACU,OAAO,CAACE,QAAQ,CAACX,WAAW,EAAE,KAAK,EAAES,OAAO,CAACE,QAAQ,CAACJ,QAAQ,CAAC;MAC9E,CAAC,CAAC,OAAOK,KAAK,EAAE;QACfH,OAAO,CAACI,YAAY,GAAI,uBAAsBD,KAAK,CAACE,OAAQ,EAAC;MAC9D;;MAEA;MACAL,OAAO,CAACE,QAAQ,GAAG;QAAEX,WAAW,EAAE,EAAE;QAAEO,QAAQ,EAAE;MAAG,CAAC;MACpDE,OAAO,CAACC,gBAAgB,GAAG,KAAK;IACjC;EACD,CAAC;EAEDK,SAAS,EAAE;IACV;IACAC,UAAU,EAAEA,CAAA,KAAM;MACjBC,OAAO,CAACC,GAAG,CAAE,cAAe,CAAC;IAC9B,CAAC;IAEDC,UAAU,EAAGC,KAAK,IAAK;MACtB;MACA;MACA,MAAM;QAAEC;MAAW,CAAC,GAAGhC,oEAAU,CAAC,CAAC;MACnC,MAAMiC,aAAa,GAAGD,UAAU,CAACE,IAAI;MAErC,MAAMd,OAAO,GAAGnB,oEAAU,CAAC,CAAC;;MAE5B;MACA,IAAKmB,OAAO,CAACE,QAAQ,CAACW,aAAa,CAAC,KAAKE,SAAS,EAAG;QACpDf,OAAO,CAACE,QAAQ,CAACW,aAAa,CAAC,GAAGF,KAAK,CAACK,MAAM,CAACC,KAAK;MACrD;MAEAT,OAAO,CAACC,GAAG,CAACT,OAAO,CAACE,QAAQ,CAAC;IAC9B;EACD;AAED,CAAE,CAAC,C","sources":["webpack://todolist/external module \"@wordpress/interactivity\"","webpack://todolist/webpack/bootstrap","webpack://todolist/webpack/runtime/make namespace object","webpack://todolist/./src/view.js"],"sourcesContent":["var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { store, getElement, getContext } from '@wordpress/interactivity';\n\nconst apiFetch = window.wp.apiFetch;\n\nconst artificialDelay = (ms) => new Promise( resolve => setTimeout(resolve, ms) );\n\nconst addTodo = (description, isComplete, dueDate) => {\n\treturn apiFetch({\n\t\tpath: '/wp-todo-api/v1/todo',\n\t\tmethod: 'POST',\n\t\tdata: { description, is_completed: isComplete, due_date: dueDate }\n\t});\n}\n\nstore( 'iapi-todos', {\n\tactions: {\n\t\taddTodo: function* () {\t\t\t\t\t\n\t\t\tconst context = getContext();\n\n\t\t\tcontext.formIsProcessing = true;\n\t\t\t\n\t\t\ttry {\n\t\t\t\tyield artificialDelay(1000);\n\t\t\t\tyield addTodo(context.new_todo.description, false, context.new_todo.due_date);\n\t\t\t} catch (error) {\n\t\t\t\tcontext.errorMessage = `Could not add TODO: ${error.message}`;\n\t\t\t}\n\t\t\t\n\t\t\t// Clear the form.\n\t\t\tcontext.new_todo = { description: '', due_date: '' };\n\t\t\tcontext.formIsProcessing = false;\n\t\t}\t\t\n\t},\n\n\tcallbacks: {\n\t\t// Add some magic here!\n\t\thelloWorld: () => {\n\t\t\tconsole.log( 'Hello World!' );\n\t\t},\n\n\t\tupdateForm: (event) => {\n\t\t\t// We can get access to the HTML element attributes to work out which field\n\t\t\t// we're updating.\n\t\t\tconst { attributes } = getElement();\n\t\t\tconst fieldToUpdate = attributes.name;\n\t\t\t\n\t\t\tconst context = getContext();\n\t\t\n\t\t\t// Update the context value here.\n\t\t\tif ( context.new_todo[fieldToUpdate] !== undefined ) {\n\t\t\t\tcontext.new_todo[fieldToUpdate] = event.target.value;\n\t\t\t}\n\n\t\t\tconsole.log(context.new_todo);\n\t\t},\n\t}\n\t\t\n} );\n"],"names":["store","getElement","getContext","apiFetch","window","wp","artificialDelay","ms","Promise","resolve","setTimeout","addTodo","description","isComplete","dueDate","path","method","data","is_completed","due_date","actions","context","formIsProcessing","new_todo","error","errorMessage","message","callbacks","helloWorld","console","log","updateForm","event","attributes","fieldToUpdate","name","undefined","target","value"],"sourceRoot":""}